{"version":3,"sources":["../../../src/app/group-widgets/GroupAdminPage/GroupDetails.tsx"],"names":["React","useState","useRef","DataList","DataListItem","DataListItemCells","DataListItemRow","DataListCell","Button","TextInput","InputGroup","Tooltip","ConfirmationModal","GroupsServiceClient","MinusIcon","PlusIcon","GroupDetails","props","groupsService","roleRef","roleInput","setRoleInput","modalInfo","setModalInfo","addGroupRole","role","doPost","groupId","params","name","then","response","status","groupConfiguration","groupRoles","push","setGroupConfiguration","removeGroupRole","doDelete","index","indexOf","splice","catch","err","path","e","trim","key","current","click","includes","title","accept_message","message","accept","cancel","cancel_message","map"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {FC,useState,useRef} from 'react';\r\nimport {  DataList,DataListItem,DataListItemCells,DataListItemRow,DataListCell, Button, TextInput, InputGroup, Chip, Tooltip} from '@patternfly/react-core';\r\n// @ts-ignore\r\nimport { ConfirmationModal } from '../Modal';\r\nimport { GroupsServiceClient, HttpResponse } from '../../groups-mngnt-service/groups.service';\r\nimport {MinusIcon,PlusIcon } from '@patternfly/react-icons';\r\n\r\n\r\nexport const GroupDetails: FC<any> = (props) => {\r\n    let groupsService = new GroupsServiceClient();\r\n    const roleRef= useRef<any>(null);\r\n    const [roleInput, setRoleInput] = useState<string>(\"\");\r\n    const [modalInfo,setModalInfo] = useState({});\r\n\r\n\r\n    const addGroupRole = (role) =>{  \r\n        groupsService!.doPost<any>(\"/group-admin/group/\"+props.groupId+\"/roles\",{},{params:{name:role}})\r\n        .then((response: HttpResponse<any>) => {\r\n          if(response.status===200||response.status===204){\r\n            props.groupConfiguration.groupRoles.push(role);\r\n            props.setGroupConfiguration({...props.groupConfiguration});\r\n            setRoleInput(\"\");\r\n            setModalInfo({});\r\n          }\r\n        })      \r\n    }\r\n\r\n    const removeGroupRole = (role) => {\r\n        groupsService!.doDelete<any>(\"/group-admin/group/\"+props.groupId+\"/role/\"+role)\r\n        .then((response: HttpResponse<any>) => {\r\n          if(response.status===200||response.status===204){\r\n            const index = props.groupConfiguration.groupRoles.indexOf(role);\r\n            if (index > -1) { // only splice array when item is found\r\n                props.groupConfiguration.groupRoles.splice(index, 1); // 2nd parameter means remove one item only\r\n            }\r\n            props.setGroupConfiguration({...props.groupConfiguration});\r\n            \r\n          }\r\n          setModalInfo({});\r\n        }).catch(err=>{\r\n            setModalInfo({});\r\n        })    \r\n        \r\n    }\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n\r\n        <ConfirmationModal modalInfo={modalInfo}/>\r\n            <DataList aria-label=\"Compact data list example\" isCompact>\r\n                <DataListItem aria-labelledby=\"compact-item1\">\r\n                    <DataListItemRow>\r\n                        <DataListItemCells\r\n                            dataListCells={[\r\n                            <DataListCell key=\"primary content\">\r\n                                <span id=\"compact-item1\"><strong>Path</strong></span>\r\n                            </DataListCell>,\r\n                            <DataListCell width={3} key=\"secondary content \">\r\n                                <span>{props.groupConfiguration?.path}</span>  \r\n                            </DataListCell>\r\n                            ]}\r\n                        />\r\n                    </DataListItemRow>\r\n                </DataListItem>\r\n                <DataListItem aria-labelledby=\"compact-item2\">\r\n                    <DataListItemRow className=\"gm_role_row\">\r\n                        <DataListItemCells\r\n                            dataListCells={[\r\n                                <DataListCell key=\"primary content\">\r\n                                    <span id=\"compact-item1\"><strong>Group Roles</strong></span>\r\n                                </DataListCell>,\r\n                                <DataListCell width={3} key=\"roles\">\r\n                                <table className=\"gm_roles-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th>\r\n                                        <InputGroup>\r\n                                            <TextInput id=\"textInput-basic-1\" value={roleInput} placeholder='Add new role' onChange={(e)=>{setRoleInput(e.trim());}} onKeyDown={(e)=>{e.key=== 'Enter'&&roleRef?.current?.click(); }} type=\"email\" aria-label=\"email input field\" />\r\n                                        </InputGroup>\r\n                                    </th>\r\n                                    <th>\r\n                                        <Tooltip content={<div>Add Role</div>}>\r\n\r\n                                            <Button ref={roleRef} onClick={()=>{\r\n                                                if(props.groupConfiguration?.groupRoles.includes(roleInput)){\r\n                                                    setModalInfo({\r\n                                                    title:\"Invalid Role\",\r\n                                                    accept_message: \"OK\",\r\n                                                    message: (\"The role (\"+ roleInput + \") cannot be added because it already exists in this group.\"),\r\n                                                    accept: function(){setModalInfo({})},\r\n                                                    cancel: function(){setModalInfo({})}\r\n                                                    });\r\n                                                }\r\n                                                else{\r\n                                                    setModalInfo({\r\n                                                        title:\"Confirmation\",\r\n                                                        accept_message: \"Yes\",\r\n                                                        cancel_message: \"No\",\r\n                                                        message: (\"Are you sure you want to add the role \"+ roleInput + \" to this group.\"),\r\n                                                        accept: function(){addGroupRole(roleInput)},\r\n                                                        cancel: function(){setModalInfo({})}\r\n                                                        });\r\n                                                }\r\n                                            }}><PlusIcon/></Button>\r\n                                        </Tooltip>\r\n                                    </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {props.groupConfiguration?.groupRoles?.map((role,index)=>{\r\n                                        return <tr>\r\n                                            <td>\r\n                                                {role}\r\n                                            </td>\r\n                                            <td>\r\n                                                <Tooltip content={<div>Remove Role</div>}>\r\n                                                    <Button variant=\"danger\" onClick={()=>{\r\n                                                        setModalInfo({\r\n                                                            title:\"Confirmation\",\r\n                                                            accept_message: \"Yes\",\r\n                                                            cancel_message: \"No\",\r\n                                                            message: (\"Are you sure you want to remove the role \" + role + \" from this group.\"),\r\n                                                            accept: function(){removeGroupRole(role)},\r\n                                                            cancel: function(){setModalInfo({})}\r\n                                                        });\r\n                                                    }}>\r\n                                                        <MinusIcon/>\r\n                                                    </Button>\r\n                                                </Tooltip>\r\n                                            </td>   \r\n                                        </tr>                    \r\n                                    })}\r\n                                </tbody>\r\n                                </table>\r\n                            </DataListCell>\r\n                                \r\n                            ]}\r\n                        />\r\n                    </DataListItemRow>\r\n                   \r\n                </DataListItem>                  \r\n            </DataList>\r\n        </React.Fragment>\r\n\r\n    )\r\n        \r\n}\r\n\r\n"],"file":"GroupDetails.js"}