{"version":3,"sources":["../../../src/app/content/group-management-pages/AdminGroupPage.tsx"],"names":["React","useState","useEffect","Tabs","Tab","TabTitleText","Breadcrumb","BreadcrumbItem","TextArea","Button","ContentPage","GroupsServiceClient","GroupMembers","GroupAttributes","GroupDetails","GroupAdmins","ConfirmationModal","GroupEnrollment","AdminGroupPage","props","groupConfiguration","setGroupConfiguration","groupId","match","params","id","activeTabKey","setActiveTabKey","descriptionInput","setDescriptionInput","editDescription","setEditDescription","user","setUser","modalInfo","setModalInfo","groupsService","fetchUser","fetchGroupConfiguration","handleTabClick","event","tabIndex","doGet","then","response","status","data","attributes","description","updateAttributes","doPost","target","catch","err","console","log","name","value","title","accept_message","cancel_message","message","accept","cancel"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {FC,useState,useEffect} from 'react';\r\nimport { Tabs, Tab,TabTitleText,Breadcrumb, BreadcrumbItem, TextArea, Button} from '@patternfly/react-core';\r\n// @ts-ignore\r\nimport { ContentPage } from '../ContentPage';\r\nimport { HttpResponse, GroupsServiceClient } from '../../groups-mngnt-service/groups.service';\r\nimport {GroupMembers} from '../../group-widgets/GroupAdminPage/GroupMembers';\r\n//import { TableComposable, Caption, Thead, Tr, Th, Tbody, Td } from '@patternfly/react-table';\r\nimport {GroupAttributes} from '../../group-widgets/GroupAdminPage/GroupAttributes';\r\nimport { GroupDetails } from '../../group-widgets/GroupAdminPage/GroupDetails';\r\nimport { GroupAdmins } from '../../group-widgets/GroupAdminPage/GroupAdmins';\r\nimport { ConfirmationModal } from '../../group-widgets/Modal';\r\nimport { GroupEnrollment } from '../../group-widgets/GroupAdminPage/GroupEnrollment';\r\n\r\n\r\n\r\nexport interface AdminGroupPageProps {\r\n  match:any;\r\n}\r\n\r\n\r\n\r\ninterface Group {\r\n  id: string;\r\n  name: string;\r\n  path: string;\r\n  extraSubGroups: Group[];\r\n}\r\n\r\ninterface AUP {\r\n    id: string;\r\n    type: string;\r\n    url: string;\r\n}\r\n\r\ninterface EnrollmentAttributes {\r\n    id?: string;\r\n    attribute: string;\r\n    label: string;\r\n    order: number;\r\n    defaultValue: string;\r\n    hidden: boolean;\r\n    modifiable: boolean;\r\n}\r\n\r\ninterface EnrollmentConfiration {\r\n    id?: string;\r\n    group: Group;\r\n    name: string;\r\n    active: boolean;\r\n    requiredAupAcceptance: boolean;\r\n    reaquireApproval: boolean;\r\n    aupExpiryDays: number;\r\n    membershipExpirationDays: number;\r\n    aup: AUP;\r\n    hideConfiguration: boolean;\r\n    attributes: EnrollmentAttributes[];\r\n    groupRoles: string[];\r\n}\r\ninterface FederatedIdentity {\r\n    identityProvider: string;\r\n}\r\n\r\ninterface User {\r\n    id?: string;\r\n    username: string;\r\n    emailVerified: boolean;\r\n    email: string;\r\n    federatedIdentities: FederatedIdentity[];\r\n}\r\n\r\ninterface Admin {\r\n    user: User;\r\n    direct: boolean;\r\n}\r\n\r\n\r\n\r\ninterface GroupConfiguration {\r\n    id?: string;\r\n    name: string;\r\n    path: string;\r\n    attributes: any;\r\n    groupRoles: string[];\r\n    enrollmentConfigurationList: EnrollmentConfiration[];\r\n    status: string;\r\n    membershipExpiresAt: string;\r\n    aupExpiresAt: string;\r\n    validFrom: string;\r\n    admins: Admin[];\r\n    extraSubgroups: Group[];\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export class GroupPage extends React.Component<GroupsPageProps, GroupsPageState> {\r\nexport const AdminGroupPage: FC<AdminGroupPageProps> = (props)=> {\r\n\r\n\r\n  const [groupConfiguration,setGroupConfiguration] = useState({} as GroupConfiguration);\r\n  const [groupId] = useState(props.match.params.id);\r\n  const [activeTabKey, setActiveTabKey] = React.useState<string | number>(0);\r\n  const [descriptionInput,setDescriptionInput] = useState<string>(\"\");\r\n  const [editDescription,setEditDescription] = useState<boolean>(false);\r\n  const [user,setUser] = useState<User>({} as User);\r\n  const [modalInfo,setModalInfo] = useState({});\r\n\r\n\r\n  let groupsService = new GroupsServiceClient();\r\n  useEffect(()=>{\r\n    fetchUser();\r\n    fetchGroupConfiguration();\r\n  },[]);\r\n\r\n\r\n  useEffect(()=>{\r\n    \r\n  },[groupConfiguration]);\r\n\r\n\r\n\r\n  \r\n\r\n  const handleTabClick = (\r\n    event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent,\r\n    tabIndex: string | number\r\n  ) => {\r\n    setActiveTabKey(tabIndex);\r\n  };\r\n\r\n\r\n  let fetchGroupConfiguration = ()=>{\r\n    groupsService!.doGet<GroupConfiguration>(\"/group-admin/group/\"+groupId+\"/all\")\r\n    .then((response: HttpResponse<GroupConfiguration>) => {\r\n      if(response.status===200&&response.data){\r\n        if(response.data?.attributes?.description?.[0]!==descriptionInput){\r\n          setDescriptionInput(response.data?.attributes?.description?.[0]);\r\n        }\r\n        setGroupConfiguration(response.data);\r\n      }\r\n    })\r\n  }\r\n\r\n  let updateAttributes = (groupConfiguration) =>{\r\n    \r\n    groupsService!.doPost<GroupConfiguration>(\"/group-admin/group/\"+groupId+\"/attributes\",groupConfiguration?.attributes?{...groupConfiguration.attributes}:{})\r\n    .then((response: HttpResponse<GroupConfiguration>) => {\r\n      if(response.status===200||response.status===204){\r\n        setGroupConfiguration({...groupConfiguration})\r\n      }\r\n      else{\r\n        fetchGroupConfiguration();\r\n      }\r\n    })\r\n  }\r\n\r\n  let fetchUser= ()=>{\r\n    groupsService!.doGet<User>(\"/whoami\",{target:\"base\"})\r\n      .then((response: HttpResponse<User>)=>{\r\n        if(response.status===200&&response.data){\r\n          setUser(response.data);\r\n        }\r\n      }).catch(err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gm_content\">\r\n        <ConfirmationModal modalInfo={modalInfo}/>\r\n        <Breadcrumb className=\"gm_breadcumb\">\r\n          <BreadcrumbItem to=\"#\">\r\n            Account Console\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem to=\"#/groups/admingroups\">\r\n            Manage Groups\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem isActive>\r\n            {groupConfiguration?.name}\r\n          </BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <ContentPage title={groupConfiguration?.name||\"\"}>\r\n          {editDescription?\r\n            <div className=\"gm_description-input-container\">\r\n              <TextArea value={descriptionInput} onChange={value => setDescriptionInput(value)} aria-label=\"text area example\" />\r\n              <Button className={\"gm_button-small\"} \r\n                  onClick={()=>{\r\n                    setModalInfo({\r\n                      title:\"Confirmation\",\r\n                      accept_message: \"Yes\",\r\n                      cancel_message: \"No\",\r\n                      message: (\"Are you sure you want to update group's description?\"),\r\n                      accept: function(){if(groupConfiguration.attributes){\r\n                        groupConfiguration.attributes.description = [descriptionInput];\r\n                        updateAttributes(groupConfiguration);\r\n                        setEditDescription(false);\r\n                        setModalInfo({})\r\n                      }},\r\n                      cancel: function(){\r\n                        setEditDescription(false);\r\n                        setModalInfo({})}\r\n                      });\r\n                  }}\r\n              >\r\n                  <div className={\"gm_check-button\"}></div>\r\n              </Button>\r\n              <Button variant=\"tertiary\" className={\"gm_button-small\"} onClick={()=>{setEditDescription(false);}}>\r\n                  <div className={\"gm_cancel-button\"}></div>\r\n              </Button>            \r\n            </div>\r\n            :<p className=\"gm_group_desc\">\r\n              {(groupConfiguration?.attributes?.description&&groupConfiguration?.attributes?.description[0])||\"No descritption available.\"}\r\n              <div className=\"gm_edit-icon\" onClick={()=>{setEditDescription(true)}}></div>\r\n\r\n            </p>\r\n          }\r\n          \r\n          <Tabs\r\n          className=\"gm_tabs\"\r\n          activeKey={activeTabKey}\r\n          onSelect={handleTabClick}\r\n          isBox={false}\r\n          aria-label=\"Tabs in the default example\"\r\n          role=\"region\"\r\n          >\r\n            <Tab eventKey={0} title={<TabTitleText>Group Details</TabTitleText>} aria-label=\"Default content - users\">\r\n              <GroupDetails groupConfiguration={groupConfiguration} groupId={groupId} setGroupConfiguration={setGroupConfiguration}/>\r\n            </Tab>    \r\n            \r\n            <Tab eventKey={1} title={<TabTitleText>Group Members</TabTitleText>} aria-label=\"Default content - members\">\r\n              <GroupMembers groupConfiguration={groupConfiguration} groupId={groupId} user={user}/>\r\n            </Tab>\r\n            <Tab eventKey={2} title={<TabTitleText>Group Admins</TabTitleText>} aria-label=\"Default content - admins\">\r\n              <GroupAdmins groupId={groupId} user={user} groupConfiguration={groupConfiguration} setGroupConfiguration={setGroupConfiguration} fetchGroupConfiguration={fetchGroupConfiguration}/>\r\n            </Tab>\r\n            <Tab eventKey={3} title={<TabTitleText>Group Enrollment Configuration</TabTitleText>} aria-label=\"Default content - attributes\">   \r\n              <GroupEnrollment groupConfiguration={groupConfiguration}  groupId={groupId} setGroupConfiguration={setGroupConfiguration} fetchGroupConfiguration={fetchGroupConfiguration} updateAttributes={updateAttributes}/>\r\n            </Tab>   \r\n            <Tab eventKey={4} title={<TabTitleText>Group Attributes</TabTitleText>} aria-label=\"Default content - attributes\">   \r\n              <GroupAttributes groupConfiguration={groupConfiguration} setGroupConfiguration={setGroupConfiguration} fetchGroupConfiguration={fetchGroupConfiguration} updateAttributes={updateAttributes}/>\r\n            </Tab>\r\n            \r\n          </Tabs>\r\n        </ContentPage>\r\n      </div>\r\n    </>  \r\n  )\r\n};\r\n"],"file":"AdminGroupPage.js"}