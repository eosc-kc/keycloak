{"version":3,"sources":["../../src/app/widgets/Msg.tsx"],"names":["React","Msg","Component","constructor","props","render","children","localizeWithChildren","msgKey","localize","params","message","l18nMsg","processKey","parts","split","count","Children","map","child","i","undefined","length","forEach","value","index","processParam","replace","startsWith","endsWith","substring","param","key"],"mappings":"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","sourcesContent":["/*\r\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\ndeclare const l18nMsg: {[key: string]: string};\r\n\r\nexport interface MsgProps {\r\n    readonly msgKey: string;\r\n    readonly params?: string[];\r\n}\r\n\r\nexport class Msg extends React.Component<MsgProps> {\r\n\r\n    public constructor(props: MsgProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        if (this.props.children) {\r\n            return Msg.localizeWithChildren(this.props.msgKey, this.props.children);\r\n        }\r\n        return (\r\n            <React.Fragment>{Msg.localize(this.props.msgKey, this.props.params)}</React.Fragment>\r\n        );\r\n    }\r\n\r\n    private static localizeWithChildren(msgKey: string, children: React.ReactNode): React.ReactNode {\r\n        const message: string = l18nMsg[this.processKey(msgKey)];\r\n        const parts = message.split(/\\{\\{param_\\d*}}/);\r\n        const count = React.Children.count(children);\r\n        return React.Children.map(children, (child, i) =>\r\n            [parts[i], child, count === i + 1 ? parts[count] : '']\r\n        );\r\n    }\r\n\r\n    public static localize(msgKey: string, params?: string[]): string {\r\n        let message: string = l18nMsg[this.processKey(msgKey)];\r\n        if (message === undefined) message = msgKey;\r\n\r\n        if ((params !== undefined) && (params.length > 0)) {\r\n            params.forEach((value: string, index: number) => {\r\n                value = this.processParam(value);\r\n                message = message.replace('{{param_'+ index + '}}', value);\r\n            })\r\n        }\r\n\r\n        return message;\r\n    }\r\n\r\n    // if the message key has Freemarker syntax, remove it\r\n    private static processKey(msgKey: string): string {\r\n        if (!(msgKey.startsWith('${') && msgKey.endsWith('}'))) return msgKey;\r\n\r\n        // remove Freemarker syntax\r\n        return msgKey.substring(2, msgKey.length - 1);\r\n    }\r\n\r\n    // if the param has Freemarker syntax, try to look up its value\r\n    private static processParam(param: string): string {\r\n        if (!(param.startsWith('${') && param.endsWith('}'))) return param;\r\n\r\n        // remove Freemarker syntax\r\n        const key: string = param.substring(2, param.length - 1);\r\n\r\n        let value: string = l18nMsg[key];\r\n        if (value === undefined) return param;\r\n\r\n        return value;\r\n    }\r\n}\r\n"],"file":"Msg.js"}