{"version":3,"sources":["../../../src/app/content/group-management-pages/GroupPage.tsx"],"names":["React","useState","useEffect","Tabs","Tab","TabTitleText","DataList","DataListItem","DataListItemCells","DataListItemRow","DataListCell","Breadcrumb","BreadcrumbItem","ContentPage","GroupsServiceClient","GroupPage","props","groupsService","fetchGroups","groupMembership","setGroupMembership","groupId","match","params","id","activeTabKey","setActiveTabKey","handleTabClick","event","tabIndex","doGet","then","response","status","data","group","name","attributes","description","validFrom","membershipExpiresAt","aupExpiresAt","groupRoles","join"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {FC,useState,useEffect} from 'react';\r\nimport { Tabs, Tab, TabTitleText, DataList,DataListItem,DataListItemCells,DataListItemRow,DataListCell,Breadcrumb, BreadcrumbItem, } from '@patternfly/react-core';\r\n// @ts-ignore\r\nimport { ContentPage } from '../ContentPage';\r\nimport { HttpResponse, GroupsServiceClient } from '../../groups-mngnt-service/groups.service';\r\n// @ts-ignore\r\nimport { Msg } from '../../widgets/Msg';\r\n//import { TableComposable, Caption, Thead, Tr, Th, Tbody, Td } from '@patternfly/react-table';\r\n\r\nexport interface GroupsPageProps {\r\n  match:any;\r\n}\r\n\r\nexport interface GroupsPageState {\r\n  group_id: any;\r\n  group_membership: GroupMembership;\r\n}\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  emailVerified: boolean;\r\n  email: string;\r\n  federatedIdentities: object;\r\n}\r\n\r\ninterface Attributes {\r\n  description:string[];\r\n}\r\n\r\ninterface Group {\r\n  id: string;\r\n  name: string;\r\n  attributes: Attributes;\r\n}\r\n\r\ninterface GroupMembership {\r\n  id?: string;\r\n  group: Group;\r\n  user: User;\r\n  status: string;\r\n  membershipExpiresAt: string;\r\n  aupExpiresAt: string;\r\n  validFrom: string;\r\n  groupRoles: string[];\r\n}\r\n\r\n\r\n\r\n\r\n// export class GroupPage extends React.Component<GroupsPageProps, GroupsPageState> {\r\nexport const GroupPage: FC<GroupsPageProps> = (props)=> {\r\n\r\n  let groupsService = new GroupsServiceClient();\r\n  useEffect(()=>{\r\n    fetchGroups();\r\n  },[]);\r\n  const [groupMembership,setGroupMembership] = useState({} as GroupMembership);\r\n  const [groupId] = useState(props.match.params.id);\r\n  const [activeTabKey, setActiveTabKey] = React.useState<string | number>(0);\r\n\r\n  const handleTabClick = (\r\n    event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent,\r\n    tabIndex: string | number\r\n  ) => {\r\n    setActiveTabKey(tabIndex);\r\n  };\r\n\r\n\r\n  let fetchGroups = ()=>{\r\n    groupsService!.doGet<GroupMembership>(\"/user/group/\"+groupId+\"/member\")\r\n    .then((response: HttpResponse<GroupMembership>) => {\r\n      if(response.status===200&&response.data){\r\n        setGroupMembership(response.data);\r\n      }\r\n    })\r\n  }\r\n    return (\r\n      <>\r\n        <div className=\"gm_content\">\r\n          <Breadcrumb className=\"gm_breadcumb\">\r\n            <BreadcrumbItem to=\"#\">\r\n              Account Console\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem to=\"#/groups/showgroups\">\r\n              My Groups\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem isActive>\r\n              {groupMembership?.group?.name}\r\n            </BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <ContentPage title={groupMembership?.group?.name||\"\"}>\r\n            <p className=\"gm_group_desc\">\r\n              {(groupMembership?.group?.attributes?.description&&groupMembership?.group?.attributes?.description[0])||\"No descritption available.\"}\r\n            </p>\r\n            <Tabs\r\n            className=\"gm_tabs\"\r\n            activeKey={activeTabKey}\r\n            onSelect={handleTabClick}\r\n            isBox={false}\r\n            aria-label=\"Tabs in the default example\"\r\n            role=\"region\"\r\n            >\r\n              <Tab eventKey={0} title={<TabTitleText>Membership Details</TabTitleText>} aria-label=\"Default content - users\">\r\n                <DataList className=\"gm_datalist\" aria-label=\"Compact data list example\" isCompact>\r\n                <DataListItem aria-labelledby=\"compact-item2\">\r\n                    <DataListItemRow>\r\n                      <DataListItemCells\r\n                        dataListCells={[\r\n                          <DataListCell key=\"primary content\">\r\n                            <span id=\"compact-item2\"><strong>Member Since</strong></span>\r\n                          </DataListCell>,\r\n                          <DataListCell key=\"secondary content \">\r\n                             <span>{groupMembership?.validFrom||\"Not Available\"}</span>  \r\n                          </DataListCell>\r\n                        ]}\r\n                      />\r\n                    </DataListItemRow>\r\n                  </DataListItem>\r\n                  <DataListItem aria-labelledby=\"compact-item1\">\r\n                    <DataListItemRow>\r\n                      <DataListItemCells\r\n                        dataListCells={[\r\n                          <DataListCell key=\"primary content\">\r\n                            <span id=\"compact-item1\"><strong>Memberhip Expiration</strong></span>\r\n                          </DataListCell>,\r\n                          <DataListCell key=\"secondary content\">{groupMembership?.membershipExpiresAt||\"Never\"}</DataListCell>\r\n                        ]}\r\n                      />\r\n                    </DataListItemRow>\r\n                  </DataListItem>\r\n                  <DataListItem aria-labelledby=\"compact-item2\">\r\n                    <DataListItemRow>\r\n                      <DataListItemCells\r\n                        dataListCells={[\r\n                          <DataListCell key=\"primary content\">\r\n                            <span id=\"compact-item2\"><strong>AUP Expiration</strong></span>\r\n                          </DataListCell>,\r\n                          <DataListCell key=\"secondary content \">\r\n                            <span>{groupMembership?.aupExpiresAt||\"Never\"}</span>\r\n                          </DataListCell>\r\n                        ]}\r\n                      />\r\n                    </DataListItemRow>\r\n                  </DataListItem>\r\n                  <DataListItem aria-labelledby=\"compact-item2\">\r\n                    <DataListItemRow>\r\n                      <DataListItemCells\r\n                        dataListCells={[\r\n                          <DataListCell key=\"primary content\">\r\n                            <span id=\"compact-item2\"><strong>Group Roles</strong></span>\r\n                          </DataListCell>,\r\n                          <DataListCell key=\"secondary content \">\r\n                            {groupMembership?.groupRoles&&groupMembership?.groupRoles.join(', ')||\"No Roles\"}  \r\n                          </DataListCell>\r\n                        ]}\r\n                      />\r\n                    </DataListItemRow>\r\n                  </DataListItem>\r\n                  \r\n                </DataList>\r\n              </Tab>           \r\n            </Tabs>\r\n          </ContentPage>\r\n        </div>\r\n      </>  \r\n    )\r\n  \r\n};\r\n"],"file":"GroupPage.js"}